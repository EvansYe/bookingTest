<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>